plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    //id 'signing'
    //id 'io.codearte.nexus-staging' version '0.11.0'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
}

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

group = 'com.ampro'
version = '0.8.4'
rootProject.description = 'A Java wrapper for the Robinhood investing service\'s API'

dependencies {
    //Running
    compile group: 'io.github.openunirest', name: 'unirest-java', version: '2.2.04' //OpenUnirest
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'

    //Testing
    testCompile 'junit:junit:4.12'
    testCompile group: 'com.github.tomakehurst', name: 'wiremock', version: '2.18.0'

    //publishing
    //classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.11.0"
}


task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

/*Publishing under construction
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'robinhood-api'
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'Robinhood API'
                description = 'A Java wrapper for the Robinhood investing service\'s API'
                url = 'https://github.com/AquaticMasteryProductions/Robinhood-Api-Java'
                licenses { license { name = 'MIT License' } }
                developers {
                    developer {
                        id = 'JonoAugustine'
                        name = 'Jonathan Augustine'
                        email = 'Aqua@jhu.edu'
                    }
                }
                organization {
                    name = 'Aquatic Mastery Productions'
                    url = 'https://aquaticmasteryproductions.com'
                }
                scm {
                    url =  'https://github.com/AquaticMasteryProductions/Robinhood-Api-Java'
                    connection = 'scm:git:git://github.com/AquaticMasteryProductions/Robinhood-Api-Java'
                    developerConnection = 'scm:git:ssh://git@github.com/AquaticMasteryProductions/Robinhood-Api-Java'
                }
                issueManagement {
                    system  = 'GitHub'
                    url  = 'https://github.com/AquaticMasteryProductions/Robinhood-Api-Java/issues'
                }
            }

            /* create the sign pom artifact
            pom.withXml {
                def pomFile = file("${project.buildDir}/generated-pom.xml")
                writeTo(pomFile)
                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                artifact(pomAscFile) {
                    classifier = null
                    extension = 'pom.asc'
                }
            }
            // create the signed artifacts
            project.tasks.signArchives.signatureFiles.each {
                artifact(it) {
                    def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
                    if (matcher.find()) {
                        classifier = matcher.group(1)
                    } else {
                        classifier = null
                    }
                    extension = 'jar.asc'
                }
            }
        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username = ossrhUser
                password = ossrhPassword
            }
        }
    }
}

signing {
    sign configurations.archives
}

model {
    tasks.generatePomFileForMavenJavaPublication {
        destination = file("$buildDir/generated-pom.xml")
    }
}
*/
